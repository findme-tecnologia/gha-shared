name: QA
on:
  workflow_call:
jobs:
  node-version:
    name: "Node Version"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && 
      (github.event.action == 'opened' || github.event.action == 'synchronize') && 
      github.event.pull_request.base.ref == 'main'
    outputs:
      node-version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check Node version
        id: extract_version
        uses: findme-tecnologia/gha-shared/.github/actions/check-node-version@main
  audit:
    name: "Audit"
    runs-on: ubuntu-latest
    needs: node-version
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.node-version.outputs.node-version }}
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm i
        shell: bash
      - name: Audit packages
        run: npm audit --audit-level moderate
        env:
          CI: true
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    needs: node-version
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.node-version.outputs.node-version }}
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm i
        shell: bash
      - name: Eslint
        run: npm run lint
  test:
    name: "Test"
    runs-on: ubuntu-latest
    needs: node-version
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.node-version.outputs.node-version }}
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm i
        shell: bash
      - name: Test
        run: npm test    
